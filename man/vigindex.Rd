% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vig-idx.R
\name{vigindex}
\alias{vigindex}
\title{Generate a vignette topical index.}
\usage{
vigindex(dir = "vignettes", vignettes = dir(dir, pattern = "*.Rmd"),
  target = "vignette-topics.Rmd")
}
\arguments{
\item{dir}{character name of directory where vignettes are stored}

\item{vignettes}{character vector of names of files to index.
These files should contain tags for entries in the index; see
the section below on index tags.}

\item{target}{name to store the result (in the same directory).
If \code{target} already exists, it will be replaced,
except that the initial part of it will be kept as-is.
Also, \code{target} is excluded from being indexed,
even if it is listed in \code{vignettes}.}
}
\value{
Nothing is returned, but the contents of \code{target} are
  created or altered, and a message indicates when it is complete.
}
\description{
Read indexing tags from a set of R-Markdown vignettes and create
a new vignette with topic names and links to the tagged locations.
}
\details{
In ordinary package development, the default areguments will
index all of the package's vignettes and create an index source file
named \code{"vignette-topics.Rmd"}.

If the target file does not exist, one is created.
The user may edit the target file once created. The function looks
for an HTML comment line (\code{<!-- (comment) -->}) -- the comment
must start at the beginning of a line. Everything after this comment
line will be replaced by a new set of indexing information each time
\code{vigindex} is run. Everything before the comment line is retained.
}
\section{Index tags}{

Indexing tags are placed within HTML comments in the vignette source
files, following a special format illustrated in the following example:
\preformatted{
### Everything you want to know about owls {#owls}
<!-- @index **Birds**!Owls; `print.owls` -->
#'     ... lines of text ...
#### Popular owls {#pop.owls}
<!-- @index birds!owls!!Screech; birds!owls!Great horned
            Birds!Owls!Barred -->
    ... lines of text ...
<!-- @index Raptors; birds!Owls!others@zzz        -->
}
The rules are as follows:
\enumerate{
  \item The keyword \code{@index} signals there are index tags
  \item There may be several index items on a line, separated
        by semicolons (\code{;}).
  \item The comment may extend over more than one line -- do not
        repeat the \code{@index} keyword
  \item Entries are separated from subentries using the bang
        (\code{!}) character (they may be nested as much as 8 deep).
  \item Markdown formatting may be used in entries
  \item When several identical entries exist, the case and formatting
        is determined by its first appearance
  \item Entries are sorted alphabetically, at each level,
        based on keys derived by stripping case and formatting from
        the entries
  \item However, if there is an \code{@} character in an entry,
        the text that follows \code{@} will be used as the sorting key.
}
Thus, in the above example, the first main entry will be \bold{Birds}
(in boldface and capitalized per its first appearance),
with a subentry for Owls, with subentries for Barred, Great horned, Screech,
and others (last because of the \code{@zzz}). The next main entry will be
\code{print.owls}, and finally, Raptors.
}

\section{Links}{

Links in the generated index will be to the latest anchor (of the
form \code{\{#anchor\}}) found
in the document, or to the top of the file if no anchors occur
before the index tag.

Because Markdown only allows anchors with headings,
the links will be fairly crude, and users are advised to use
a lot of sectioning in writing vignettes.
}

