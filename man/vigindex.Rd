% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vig-idx.R
\name{vigindex}
\alias{vigindex}
\alias{compile_vi}
\alias{add_navigation}
\alias{write_vi}
\title{Generate a vignette topical index.}
\usage{
vigindex(dir = "vignettes", vignettes = dir(dir, pattern = "*.Rmd"),
  target = "vignette-topics.Rmd", navigation = c("auto", "none", "fourths",
  "letters"), ...)

compile_vi(dir = "vignettes", vignettes = dir(dir, pattern = "*.Rmd"))

add_navigation(tree, navigation = c("auto", "none", "fourths", "letters"))

write_vi(tree, dir = getwd("vignettes"), target = "vignette-topics.Rmd",
  taglines, ...)
}
\arguments{
\item{dir}{character name of directory where vignettes are stored}

\item{vignettes}{character vector of names of files to index.
These files should contain tags for entries in the index; see
the section below on index tags.}

\item{target}{name to store the result (in the same directory).
If \code{target} already exists, it will be replaced,
except that the initial part of it will be kept as-is.
Also, \code{target} is excluded from being indexed,
even if it is listed in \code{vignettes}.}

\item{navigation}{character value determining whether links/anchors should be
added to assist in jumping to other places in the index. If \code{"none"},
no navigation is added; if \code{"fourths"}, navigation points are placed
at four roughly equally-spaced ponts in the index. If \code{"letters"},
they are placed at the beginning of each new beginning letter. If
\code{"auto"}, it is determined by the number of main entries.}

\item{...}{additional arguments. In particular, extra arguments in
\code{vigindex} are passed to \code{write_vi}.}

\item{tree}{An index tree such as is returned by \code{compile_vi};
see details under Value.}

\item{taglines}{character vector of lines that are added to the
end of the index. If not supplied, it adds a promotional link for
the \pkg{vigindex}  package.}

\item{style}{Additional text to place at the beginning of the index.
If missing, no additional visible text is added, but a standard
\code{<style> ... </style>} string is added that should make
the formatting more attractive (e.g., no bullets).}
}
\value{
\code{vigindex} and \code{write_vi} return nothing, but the contents
  of \code{target} are created or altered, and a message indicates when it is
  complete.

\code{compile_vi} returns a tree structure with the compiled index.
  It consists of a named \code{list} of nodes. The names serve as sorting
  keys for the nodes. Each node is in turn a named list with three elements:
  \code{text} is a vector of character strings for the entry and any
  subentries. \code{link} is the character link to associate with the last
  element of \code{text}. And \code{children} is a named list of nodes of the
  same form as \code{tree}, containing any subsentries.

\code{add_navigation} returns an amended tree with entries for
    navigation links.
}
\description{
Read indexing tags from a set of R-Markdown vignettes and create
a new vignette with topic names and links to the tagged locations.
}
\details{
The \code{vigindex} function does everything in one call; in ordinary package
development, using it with the default areguments will index all of the
package's vignettes and create an index source file named
\code{"vignette-topics.Rmd"}. If the user wants more control over the
process, they may call (in order): \code{compile_vi},
\code{add_navigation} (optionally), and \code{write_vi}.

If the target file does not exist, one is created.
The user may edit the target file once created. The function looks
for a line of the form \code{<div class="vigindex" ...>}.
Everything after this \code{div}
line will be replaced by a new set of indexing information each time
\code{vigindex} is run. Everything before the \code{div} line is retained.
}
\section{Index tags}{

Indexing tags are placed within HTML comments in the vignette source
files, following a special format illustrated in the following example:
\preformatted{
### Everything you want to know about owls {#owls}
<!-- @index **Birds**!Owls; `print.owls` -->
#'     ... lines of text ...
#### Popular owls {#pop.owls}
<!-- @index birds!owls!!Screech; birds!owls!Great horned
            Birds!Owls!Barred -->
    ... lines of text ...
<!-- @index Raptors; birds!Owls!others@zzz        -->
}
Entries on the same line are separated by \code{;}, and subentries are delineated
by \code{!}. Sorting is done without regard to capitalization or formatting,
but a different sorting key may be appended after an \code{@} symbol. Accordingly,
with the above examples, the first main entry will be \bold{Birds}
(in boldface and capitalized per its first appearance),
with a subentry for Owls, in turn with subentries for Barred, Great horned, Screech,
and others (last because of the \code{@zzz}). The next main entry will be
\code{print.owls}, and finally, Raptors.
}

\section{Links}{

Links in the generated index will be to the latest anchor (of the
form \code{\{#anchor\}}) found
in the document, or to the top of the file if no anchors occur
before the index tag.

See \code{vignette("example", package = "vigindex")} for examples and more
details.
}

